@model Inisra_Web_App_MVC.Models.Job

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Jobs", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Job</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.CompanyID)
        @Html.HiddenFor(model => model.Company.Name)

        <div class="form-group">
            @Html.LabelFor(model => model.Company.Name, "Company", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="form-control">
                    <b>
                        @Html.DisplayFor(m => Model.Company.Name, new { htmlAttributes = new { @class = "form-control" } })
                    </b>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Profession, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Profession, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Profession, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--todo Add currency-->
        <div class="form-group">
            @Html.LabelFor(model => model.SalaryRate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.SalaryRate, null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SalaryRate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsOpen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsOpen)
                    @Html.ValidationMessageFor(model => model.IsOpen, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsInvitationOnly, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="row">
                    <div class="col-md-2">
                        @Html.RadioButtonFor(model => model.IsInvitationOnly, false, htmlAttributes: new { @class = "", @id = "public", @checked = "checked", @text = "Public" })
                        @Html.Label("Public", htmlAttributes: new { @class = "control-label", @for = "public" })
                    </div>
                    <div class="col-md-10">
                        @Html.RadioButtonFor(model => model.IsInvitationOnly, true, htmlAttributes: new { @class = "", @id = "invitationOnly" })
                        @Html.Label("Invitation Only", htmlAttributes: new { @class = "control-label", @for = "invitationOnly" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationDeadlineDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplicationDeadlineDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApplicationDeadlineDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @ViewBag.Message
            <label>
                @{
                    if (Model.JobDescriptionDocument != null)
                    {
                        ViewBag.jd = Model.JobDescriptionDocument.DocumentName;
                    }
                    else
                    {
                        ViewBag.jd = "no Jd uploaded";
                    }
                }
                @ViewBag.jd
            </label>
            <label class="control-label col-md-2" for="JD">Job Description Document</label>
            <div class="col-md-10">
                <input type="file" name="file" id="JD" class="form-control" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
